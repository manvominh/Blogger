@inject IHttpClientFactory _httpClientFactory
@inject NavigationManager _navigationManager
@inject IToastService _toastService

<div>
    <p>@TextMessage</p>

    <button @onclick="Yes" class="btn btn-outline-danger">Yes</button>
    <button @onclick="No" class="btn btn-primary">No</button>
</div>

@code {

    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = default!;
    [CascadingParameter] private IModalService Modal { get; set; } = default!;
    [Parameter] public string TextMessage { get; set; } = string.Empty;
    async Task Yes()
    {
        await BlazoredModal.CloseAsync(ModalResult.Ok(true));
    }

    async Task No() => await BlazoredModal.CloseAsync(ModalResult.Ok(false));

}