@inject IHttpClientFactory _httpClientFactory
@inject NavigationManager _navigationManager
@inject IToastService _toastService

<div>
    <p>Are you sure you want to delete this commment?</p>

    <button @onclick="Yes" class="btn btn-outline-danger">Yes</button>
    <button @onclick="No" class="btn btn-primary">No</button>
</div>

@code {

    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = default!;
    [CascadingParameter] private IModalService Modal { get; set; } = default!;
    [Parameter] public int CommentId { get; set; }
    async Task Yes()
    {
        // var confirmationModal = Modal.Show<Confirm>("Second Modal");
        // var result = await confirmationModal.Result;

        // if (result.Cancelled)
        //     return;
        //var abc = CommentId;

        await BlazoredModal.CloseAsync(ModalResult.Ok(true));
    }

    async Task No() => await BlazoredModal.CloseAsync(ModalResult.Ok(false));

}