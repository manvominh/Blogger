@using System.Security.Claims;
@inject ILocalStorageService _localStorageService
@inject NavigationManager _navigationManager

<div class="site-mobile-menu site-navbar-target">
	<div class="site-mobile-menu-header">
		<div class="site-mobile-menu-close">
			<span class="icofont-close js-menu-toggle"></span>
		</div>
	</div>
	<div class="site-mobile-menu-body"></div>
</div>

<nav class="site-nav">
	<div class="container">
		<div class="menu-bg-wrap">
			<div class="site-navigation">
				<div class="row g-0 align-items-center">
					<div class="col-2">
						<a href="/" class="logo m-0 float-start">Man Vo Blog<span class="text-primary">.</span></a>
					</div>
					<div class="col-8 text-center">
						<ul class="js-clone-nav d-none d-lg-inline-block text-start site-menu mx-auto">
							<li class="active"><a href="/">Home</a></li>							
							<AuthorizeView>
								<NotAuthorized>
									<li><a href="/register">Register</a></li>
									<li><a href="/login">Login</a></li>
								</NotAuthorized>
							</AuthorizeView>
							<AuthorizeView Roles="Administrator,User">
								<Authorized>
							<li class="has-children">
								<a href="/myposts/@UserId">Posts</a>
								<ul class="dropdown">
									<li><a href="/myposts">My Post</a></li>
									<li><a href="/postdetails">New Post</a></li>
								</ul>
							</li>
								</Authorized>
							</AuthorizeView>
							<AuthorizeView Roles="Administrator">
								<Authorized>
							<li class="has-children">
								<a href="/users">Admin</a>
								<ul class="dropdown">
									<li><a href="/users">Users</a></li>
									<li><a href="/roles">Roles</a></li>
								</ul>
							</li>
								 </Authorized>
							</AuthorizeView>
							<AuthorizeView>
								<Authorized>
									<li class="has-children">
										<a href="/profile"><i class="fas fa-user"></i></a>
										<ul class="dropdown">
											<li><span>Welcome @DisplayFullName(context.User.Claims.ToList())</span></li>
											<li><a href="/profile" title="">Profile</a></li>
											<li><a @onclick="Logout" href="javascript:void(0)">Logout</a></li>
										</ul>
									</li>
								</Authorized>
							</AuthorizeView>
						</ul>
					</div>
					<div class="col-2 text-end">
						<a href="#" class="burger ms-auto float-end site-menu-toggle js-menu-toggle d-inline-block d-lg-none light">
							<span></span>
						</a>
						<form action="#" class="search-form d-none d-lg-inline-block">
							<input type="text" class="form-control" placeholder="Search...">
							<span class="bi-search"></span>
						</form>
					</div>
					
				</div>
			</div>
		</div>
	</div>
</nav>
<script src="js/navbar.js"></script>
@code {
	private bool collapseNavMenu = true;

	private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

	private string UserId { get; set; }
	[CascadingParameter]
	private Task<AuthenticationState> authenticationState { get; set; }

	private void ToggleNavMenu()
	{
		collapseNavMenu = !collapseNavMenu;
	}
	protected override async Task OnInitializedAsync()
	{
		var authState = await authenticationState;
		var user = authState.User;
		if (user.Identity.IsAuthenticated)
		{
			UserId = user.FindFirst(ClaimTypes.NameIdentifier)?.Value;
		}
	}
	private async Task Logout()
	{
		await _localStorageService.RemoveItemAsync("jwt_token");
		_navigationManager.NavigateTo("/");
	}
	private string DisplayFullName(List<Claim> claims)
	{
		var firstName = claims.Where(_ => _.Type == "FirstName").Select(_ => _.Value).FirstOrDefault();
		var lastName = claims.Where(_ => _.Type == "LastName").Select(_ => _.Value).FirstOrDefault();
		if (!string.IsNullOrEmpty(firstName) || !string.IsNullOrEmpty(lastName))
		{
			return $"{firstName}  {lastName}";
		}
		var email = claims.Where(_ => _.Type == "Email").Select(_ => _.Value).FirstOrDefault();
		return email;
	}
}
